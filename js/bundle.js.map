{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA,CAAgB;AAChB;AACA;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,gPAAgP;AAC7P,aAAa,8BAA8B;AAC3C,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7HgC;AAChC,iEAAe,6CAAO;;;;;;UCDtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN2C;AAC3C;AACA;AACA,QAAQ,8BAA8B;AACtC,QAAQ,6BAA6B;AACrC,QAAQ,4BAA4B;AACpC,QAAQ,4BAA4B;AACpC;AACA;AACA,sBAAsB,wDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB","sources":["webpack://testtuskwa/./src/components/TagList/TagList.js","webpack://testtuskwa/./src/components/TagList/index.js","webpack://testtuskwa/webpack/bootstrap","webpack://testtuskwa/webpack/runtime/define property getters","webpack://testtuskwa/webpack/runtime/hasOwnProperty shorthand","webpack://testtuskwa/webpack/runtime/make namespace object","webpack://testtuskwa/./src/index.js"],"sourcesContent":["﻿export default class TagList {\r\n// class TagList {\r\n    constructor() {\r\n        this.data = [\r\n            {label: 'Going to learn React', id: 1},\r\n            {label: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aperiam voluptatem laudantium, ea omnis ut atque culpa! Laudantium veniam reiciendis quia optio veritatis consequatur ut, ab, aliquid beatae maiores dolore possimus?', id: 2},\r\n            {label: 'Hello brother', id: 3},\r\n            {label: 'Hello mother', id: 4},\r\n        ];\r\n        this.readOnlyMode = false;\r\n        this.maxId = this.data.length;\r\n\r\n        this.separator = \" \";\r\n\r\n        this.tagList = document.querySelector('.tag-list');\r\n        this.headerInput = document.querySelector('.header__input');\r\n        this.btnAdd = document.querySelector('.header__button');\r\n        this.readOnlyModeCheckbox = document.querySelector('.readonly__checkbox');\r\n\r\n        // нужно было наверное формой делать и вешать сабмит на форму, но..\r\n        this.btnAdd.addEventListener('click', (event) => {\r\n            if (event.target && this.headerInput.value != \"\" && !this.readOnlyMode) {\r\n                event.preventDefault();\r\n                this.headerInput.value.split(this.separator).forEach(item => {\r\n                    this.addListItem(item);\r\n                });\r\n                // addListItem(headerInput.value);\r\n                this.headerInput.value = \"\";\r\n        \r\n                console.log(this.data);\r\n            }\r\n        });\r\n        this.tagList.addEventListener('click', (event) => {\r\n            if (event.target && (event.target.tagName == \"BUTTON\" || event.target.tagName == \"IMG\")) {\r\n                event.preventDefault();\r\n        \r\n                if (event.target.tagName == \"BUTTON\") {\r\n                    this.deleteListItem(event.target.parentElement.parentElement.getAttribute(\"id\"));\r\n                } else {\r\n                    this.deleteListItem(event.target.parentElement.parentElement.parentElement.getAttribute(\"id\"));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    updateIdAfterDelete = (id) => {\r\n        const listItems = document.querySelectorAll('.list-item');\r\n        for (let i = id-1; i < listItems.length; i++) {\r\n            listItems[i].setAttribute(\"id\", i+1);\r\n        }\r\n    }\r\n\r\n    deleteListItem = (id) => {\r\n        const listItems = document.querySelectorAll('.list-item');\r\n    \r\n        if (this.readOnlyMode) { return }\r\n    \r\n        listItems[id-1].remove();\r\n    \r\n        // console.log('delete item  id = ',id);\r\n        // console.log('before delete item', data);\r\n        this.data = [...this.data.slice(0, id-1), ...this.data.slice(id)];\r\n        // not deep clone\r\n        this.maxId--;\r\n        for (let i = id - 1; i < this.maxId; i++) {\r\n            this.data[i].id = i + 1;\r\n        }\r\n        console.log('after delete item',this.data);\r\n        this.updateIdAfterDelete(id);\r\n    }\r\n\r\n    addListItem = (text) => {\r\n        const element = document.createElement(\"li\");\r\n        \r\n        element.classList.add('list-item');\r\n        element.setAttribute(\"id\", ++this.maxId);\r\n    \r\n        this.data.push({label: text, id: this.maxId});\r\n    \r\n        element.innerHTML = `\r\n        <div class=\"list-item__row\">\r\n            <span class=\"list-item__text\">${text}</span>\r\n            <button type=\"button\" class=\"list-item__trash\">\r\n            <img src=\"img/trash_delete_icon.svg\">\r\n            </button>\r\n        </div>\r\n        `\r\n        this.tagList.append(element);\r\n    }\r\n\r\n    get List() {\r\n        return this.data;\r\n    }\r\n\r\n    // объект в сеттер - массив объектов (структуры массива data)\r\n    set List(obj) {\r\n        this.data = obj;\r\n    }\r\n\r\n    onReadOnlyMode = () => {\r\n        this.readOnlyMode = true;\r\n        this.readOnlyModeCheckbox.checked = this.readOnlyMode;\r\n    }\r\n\r\n    offReadOnlyMode = () =>  {\r\n        this.readOnlyMode = false;\r\n        this.readOnlyModeCheckbox.checked = this.readOnlyMode;\r\n    }\r\n\r\n    toggleReadOnlyMode = () => {\r\n        this.readOnlyModeCheckbox.checked = !this.readOnlyMode;\r\n    }\r\n\r\n    writeToLocalStorage = (data) => {\r\n        localStorage.clear();\r\n        const dataSt = JSON.stringify(data);\r\n        // data.forEach((i, item) => {\r\n        //     localStorage.setItem(list, item.label);\r\n        // });\r\n        localStorage.setItem('list', dataSt);\r\n    }\r\n\r\n    readFromLocalStorage = () => {\r\n        return JSON.parse(localStorage.getItem('label'));\r\n    }\r\n}","import TagList from './TagList';\r\nexport default TagList;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import TagList from './components/TagList';\r\n\r\n// const data2 = [\r\n//     {label: 'Hello brother', id: 1},\r\n//     {label: 'Hello mother', id: 2},\r\n//     {label: 'Hello first', id: 3},\r\n//     {label: 'Hello third', id: 4},\r\n// ]\r\n\r\nconst tagListEx = new TagList();\r\n\r\n// tagListEx.onReadOnlyMode();\r\n\r\n// tagListEx.List = data2;\r\n\r\nconsole.log(tagListEx.List);\r\n\r\n// console.log('from localStorage');\r\n// tagListEx.writeToLocalStorage(tagListEx.data);\r\n// tagListEx.readFromLocalStorage();\r\n// localStorage.clear();"],"names":[],"sourceRoot":""}